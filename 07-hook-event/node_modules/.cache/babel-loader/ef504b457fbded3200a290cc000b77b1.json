{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yzzeee\\\\Desktop\\\\React\\\\07-hook-event\\\\src\\\\pages\\\\MyMemo.js\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nconst MyMemo = () => {\n  const getLength = w => {\n    console.log(\"getLength() 호출됨! :::: \" + moment().format(\"YY/MM/DD hh:mm:ss:ms\"));\n    return w.length;\n  };\n\n  const words = [\"City\", \"Wisdom\", \"Deagyu\", \"Jeju\", \"Jeju\", \"Wisdom\"];\n  const [myCount, setMyCount] = React.useState(0);\n  const [myIndex, setMyInex] = React.useState(0);\n  const [myWord, setMyWord] = React.useState(words[myIndex]); // const [myLen, setMyLen] = React.useState(myWord.length);\n  // const [myState, setMyState] = React.useState({\n  //   count: 0,\n  //   index: 0,\n  //   word: words[0],\n  //   len: words[0].length,\n  // });\n  // React.useEffect(() => {\n  //   setMyState({\n  //     ...myState,\n  //     len: getLength(myState.word),\n  //   });\n  // }, [myState.word]);\n  // React.useEffect(() => {\n  //   setMyLen(getLength(myWord));\n  // }, [myWord]);\n  // 아래 문법을 합친게 useMemo\n  // const [myLen, setMyLen] = React.useState(myWord.length);\n  // React.useEffect(() => {\n  //   setMyLen(getLength(myWord));\n  // }, [myWord]);\n\n  const myLen = React.useMemo(() => {\n    return getLength(myLen);\n  }, [myWord]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"MyMemo\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, myIndex, \"\\uBC88\\uC9F8 \\uB2E8\\uC5B4 \\\"\", myWord, \"\\\"\\uC758 \\uAE38\\uC774 : \", myLen), /*#__PURE__*/React.createElement(\"button\", {\n    // onClick={(e) => {\n    //   const nextIndex = (myState.index + 1) % words.length;\n    //   const nextCount = myState.count + 1;\n    //   setMyState({\n    //     ...myState,\n    //     index: nextIndex,\n    //     word: words[nextIndex],\n    //     count: nextCount,\n    //   });\n    // }}\n    onClick: () => {\n      const next = (myIndex + 1) % words.length;\n      setMyInex(next);\n      setMyCount(myCount + 1);\n      setMyWord(words[next]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"\\uBC84\\uD2BC(\", myCount, \")\"));\n};\n\nexport default MyMemo;","map":{"version":3,"sources":["C:/Users/yzzeee/Desktop/React/07-hook-event/src/pages/MyMemo.js"],"names":["React","moment","MyMemo","getLength","w","console","log","format","length","words","myCount","setMyCount","useState","myIndex","setMyInex","myWord","setMyWord","myLen","useMemo","next"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CACE,2BAA2BL,MAAM,GAAGM,MAAT,CAAgB,sBAAhB,CAD7B;AAGA,WAAOH,CAAC,CAACI,MAAT;AACD,GALD;;AAOA,QAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,QAA7C,CAAd;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,CAAf,CAA9B;AAEA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBd,KAAK,CAACY,QAAN,CAAe,CAAf,CAA7B;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACY,QAAN,CAAeH,KAAK,CAACI,OAAD,CAApB,CAA5B,CAdmB,CAgBnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,KAAK,GAAGjB,KAAK,CAACkB,OAAN,CAAc,MAAM;AAChC,WAAOf,SAAS,CAACc,KAAD,CAAhB;AACD,GAFa,EAEX,CAACF,MAAD,CAFW,CAAd;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,OAFH,kCAEmBE,MAFnB,8BAEmCE,KAFnC,CAFF,eAME;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAA,OAAO,EAAE,MAAM;AACb,YAAME,IAAI,GAAG,CAACN,OAAO,GAAG,CAAX,IAAgBJ,KAAK,CAACD,MAAnC;AACAM,MAAAA,SAAS,CAACK,IAAD,CAAT;AACAR,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAM,MAAAA,SAAS,CAACP,KAAK,CAACU,IAAD,CAAN,CAAT;AACD,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAqBMT,OArBN,MANF,CADF;AAgCD,CA7ED;;AA+EA,eAAeR,MAAf","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst MyMemo = () => {\r\n  const getLength = (w) => {\r\n    console.log(\r\n      \"getLength() 호출됨! :::: \" + moment().format(\"YY/MM/DD hh:mm:ss:ms\")\r\n    );\r\n    return w.length;\r\n  };\r\n\r\n  const words = [\"City\", \"Wisdom\", \"Deagyu\", \"Jeju\", \"Jeju\", \"Wisdom\"];\r\n\r\n  const [myCount, setMyCount] = React.useState(0);\r\n\r\n  const [myIndex, setMyInex] = React.useState(0);\r\n\r\n  const [myWord, setMyWord] = React.useState(words[myIndex]);\r\n\r\n  // const [myLen, setMyLen] = React.useState(myWord.length);\r\n  // const [myState, setMyState] = React.useState({\r\n  //   count: 0,\r\n  //   index: 0,\r\n  //   word: words[0],\r\n  //   len: words[0].length,\r\n  // });\r\n\r\n  // React.useEffect(() => {\r\n  //   setMyState({\r\n  //     ...myState,\r\n  //     len: getLength(myState.word),\r\n  //   });\r\n  // }, [myState.word]);\r\n\r\n  // React.useEffect(() => {\r\n  //   setMyLen(getLength(myWord));\r\n  // }, [myWord]);\r\n\r\n  // 아래 문법을 합친게 useMemo\r\n  // const [myLen, setMyLen] = React.useState(myWord.length);\r\n  // React.useEffect(() => {\r\n  //   setMyLen(getLength(myWord));\r\n  // }, [myWord]);\r\n\r\n  const myLen = React.useMemo(() => {\r\n    return getLength(myLen);\r\n  }, [myWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>MyMemo</h2>\r\n      <p>\r\n        {/* {myState.index}번째 단어 \"{myState.word}\"의 길이 : {myState.len} */}\r\n        {myIndex}번째 단어 \"{myWord}\"의 길이 : {myLen}\r\n      </p>\r\n      <button\r\n        // onClick={(e) => {\r\n        //   const nextIndex = (myState.index + 1) % words.length;\r\n        //   const nextCount = myState.count + 1;\r\n\r\n        //   setMyState({\r\n        //     ...myState,\r\n        //     index: nextIndex,\r\n        //     word: words[nextIndex],\r\n        //     count: nextCount,\r\n        //   });\r\n        // }}\r\n\r\n        onClick={() => {\r\n          const next = (myIndex + 1) % words.length;\r\n          setMyInex(next);\r\n          setMyCount(myCount + 1);\r\n          setMyWord(words[next]);\r\n        }}\r\n      >\r\n        {/* 버튼({myState.count}) */}\r\n        버튼({myCount})\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMemo;\r\n"]},"metadata":{},"sourceType":"module"}